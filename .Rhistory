myo_sim$top <- myo_sim$percent == 100
myo_sim$fittedIntensity <- NA
myo_sim$fittedIntensity[ myo_sim$top ] <- myo$intensity[ round(myo$mz, digits = 2) %in% round(myo_sim$mz[myo_sim$top], digits = 2)]
myo$intensity[ round(myo$mz, digits = 2) %in% round(myo_sim$mz[myo_sim$top], digits = 2)]
fit <- myo[ round(myo$mz, digits = 2) %in% round(myo_sim$mz[myo_sim$top], digits = 2)]
fit <- myo[ round(myo$mz, digits = 2) %in% round(myo_sim$mz[myo_sim$top], digits = 2),]
View(myo)
View(fit)
View(myo_sim)
fit$intensity %in% myo_sim$intensity
myo_sim$intensity  %in%  fit$intensity
myo_sim$mz  %in%  fit$mz
p + xlim(c(997,999))
View(fit)
View(fit)
top(fit$intensity)
max(fit$intensity)
fit <- fit[ fit$intensity = max(fit$intensity)]
fit <- fit[ fit$intensity == max(fit$intensity)]
fit <- fit[ fit$intensity == max(fit$intensity),]
myo_sim$fittedIntensity[ myo_sim$percent == 100 & round(myo$mz, digits = 2) %in% round(myo_sim$mz[myo_sim$top], digits = 2) ] <- fit$intensity
myo_sim$fittedIntensity[ myo_sim$percent == 100 & round(myo$mz, digits = 2) %in% round(myo_sim$mz[myo_sim$top], digits = 2) ]
myo_sim$fittedIntensity[ myo_sim$percent == 100 & round(myo_sim$mz[myo_sim$percent == 100], digits = 2) %in% round(myo$mz, digits = 2) ]
myo_sim$fittedIntensity[ myo_sim$percent == 100 & round(myo_sim$mz[myo_sim$percent == 100], digits = 2) %in% round(fit$mz, digits = 2) ]
myo_sim$percent == 100 & round(myo_sim$mz[myo_sim$percent == 100], digits = 2) %in% round(fit$mz, digits = 2)
myo_sim$percent == 100 & round(myo_sim$mz, digits = 2) %in% round(fit$mz, digits = 2)
myo_sim$fittedIntensity[ myo_sim$percent == 100 & round(myo_sim$mz, digits = 2) %in% round(fit$mz, digits = 2) ]
myo_sim$fittedIntensity <- NA
myo_sim$fittedIntensity[ myo_sim$percent == 100 & round(myo_sim$mz, digits = 2) %in% round(fit$mz, digits = 2) ] <- fit$intensity
View(myo_sim)
myo_sim$fittedIntensity <- fit$intensity * myo_sim$percent / 100
View(myo_sim)
p <- p + geom_vline(data = myo_sim, aes(xintercept = mz, colour = "red"))
p + xlim(c(997,999))
p
p <- ggplot()
p <- p + geom_line(data =  myo, aes(mz, intensity))
p <- p + geom_linerange(data = myo_sim, aes(mz, ymin = 0, ymax =fittedIntensity, colour = "red"))
p
p <- ggplot()
p <- p + geom_line(data =  myo, aes(mz, intensity))
p <- p + geom_linerange(data = myo_sim, aes(mz, ymin = 0, ymax = fittedIntensity, colour = "red"))
p
p + xlim(c(800,820))
p + xlim(c(805,810))
p + xlim(c(807,810))
p + xlim(c(807.5,809))
p <- p + geom_line(data = myo_sim, aes(mz, fittedIntensity, colour = "red"))
p + xlim(c(807.5,809))
p <- p + geom_linerange(data = myo_sim, aes(mz, ymin = 0, ymax = fittedIntensity, colour = "red"))
p <- p + geom_line(data = myo_sim, aes(mz, fittedIntensity, colour = "red"))
p + xlim(c(807.5,809))
p
p + xlim(c(807.5,809))
p <- p + xlim(c(807.5,809))
ggsave(filename = "testPlot.png", plot = p)
source('~/GitHub/PRoteinMassSpecSim/Functions.R')
myo_sim <- generateDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE)
library("plyr")
myo_sim <- generateDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE)
library("OrgMassSpecR")
myo_sim <- generateDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE)
source('~/GitHub/PRoteinMassSpecSim/Functions.R')
myo_sim <- generateDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE)
proteinSequence <- select(tmp, proteinAccession, "SEQUENCE", "UNIPROTKB")[,2]
tmp <- UniProt.ws(taxId)
tmp <- availableUniprotSpecies()
generateDist <- function(
uniprotSpeciesName = "Homo sapiens",
proteinAccession = "P02144",
charge = 1:20,
removeFirstM = FALSE,
variableModifications = NA
)
{
tmp <- availableUniprotSpecies()
if (any(tmp$`Species name` == uniprotSpeciesName)) taxId <- as.integer(tmp$`taxon ID`[tmp$`Species name` == uniprotSpeciesName])
#else generate warning and quit
tmp <- UniProt.ws(taxId)
proteinSequence <- select(tmp, proteinAccession, "SEQUENCE", "UNIPROTKB")[,2]
if (removeFirstM == TRUE) proteinSequence <- substring(proteinSequence, 2)
proteinChemForm <- pepToForm(proteinSequence)
#proteinChemForm <- formulaCharToNamedVec(proteinChemForm)
# formulaFrame <- data.frame( z = charge, proteinChemForm = proteinChemForm)
#
# formulaFrame <- ddply(
#   formulaFrame,
#   "z",
#   function(x){
#
#     tmp <- formulaCharToNamedVec(x$proteinChemForm) + c(0,x$z,0,0,0)
#     data.frame( proteinChemForm = NamedVecToformularChar(tmp))
#   }
# )
#
#
# distframe <- ddply(
#   formulaFrame,
#   .(z, proteinChemForm),
#   function(x){
#     IsotopicDistribution( formulaCharToList(x$proteinChemForm), charge = x$z )
#   }
# )
charged_distframe <- ldply(charge, function(x){
tmp <- formulaCharToNamedVec(proteinChemForm)
tmp <- tmp + c(0,x,0,0,0)
tmp <- formulaCharToList(tmp)
tmp <- IsotopicDistribution( tmp, charge = z )
tmp$charge <- x
return(tmp)
})
}
uniprotSpeciesName = "Homo sapiens",
proteinAccession = "P02144",
charge = 1:20,
removeFirstM = FALSE,
variableModifications = NA
uniprotSpeciesName = "Homo sapiens"
proteinAccession = "P02144"
charge = 1:20
removeFirstM = FALSE
variableModifications = NA
tmp <- availableUniprotSpecies()
if (any(tmp$`Species name` == uniprotSpeciesName)) taxId <- as.integer(tmp$`taxon ID`[tmp$`Species name` == uniprotSpeciesName])
tmp <- UniProt.ws(taxId)
proteinSequence <- select(tmp, proteinAccession, "SEQUENCE", "UNIPROTKB")[,2]
if (removeFirstM == TRUE) proteinSequence <- substring(proteinSequence, 2)
proteinChemForm <- pepToForm(proteinSequence)
tmp <- formulaCharToNamedVec(proteinChemForm)
tmp
tmp <- tmp + c(0,x,0,0,0)
tmp <- tmp + c(0,charge[1],0,0,0)
tmp
tmp <- formulaCharToList(tmp)
tmp
proteinSequence <- select(tmp, proteinAccession, "SEQUENCE", "UNIPROTKB")[,2]
tmp <- UniProt.ws(taxId)
proteinSequence <- select(tmp, proteinAccession, "SEQUENCE", "UNIPROTKB")[,2]
proteinChemForm <- pepToForm(proteinSequence)
tmp <- formulaCharToNamedVec(proteinChemForm)
list(tmp)
tmp <- formulaCharToList(proteinChemForm)
tmp
tmp + 1
tmp$H + 1
tmp
tmp <- tmp$H + 1
tmp
tmp <- formulaCharToList(proteinChemForm)
tmp
tmp + list(1,1,1,1,1)
tmp + list(c = 1, H = 1, N = 1, O = 1, S 1)
tmp + list(c = 1, H = 1, N = 1, O = 1, S = 1)
list(c = 1, H = 1, N = 1, O = 1, S = 1)
tmp 2 <- list(c = 1, H = 1, N = 1, O = 1, S = 1)
tmp2 <- list(c = 1, H = 1, N = 1, O = 1, S = 1)
tmp + tmp2
tmp <- formulaCharToNamedVec(proteinChemForm)
tmp
tmp + c(1,1,1,1,1)
tmp <- list( C= tmp[1], H= tmp[2], N= tmp[3], O= tmp[4], S= tmp[5])
tmp
charged_distframe <- ldply(charge, function(x){
tmp <- formulaCharToNamedVec(proteinChemForm)
tmp <- tmp + c(0,x,0,0,0)
tmp <- list( C= tmp[1], H= tmp[2], N= tmp[3], O= tmp[4], S= tmp[5])
tmp <- IsotopicDistribution( tmp, charge = x )
tmp$charge <- x
return(tmp)
})
source('~/GitHub/PRoteinMassSpecSim/Functions.R')
myo_sim <- generateDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE)
p <- p + geom_vline(data = myo_sim, aes(xintercept = mz, colour = "red"))
p + xlim(c(807.5,809))
library("ggplot2")
p <- p + geom_vline(data = myo_sim, aes(xintercept = mz, colour = "red"))
p + xlim(c(807.5,809))
p
source('~/GitHub/PRoteinMassSpecSim/Functions.R')
unlist(tmp)
unname(unlist(tmp))
x <- unname(unlist(tmp))
rep(length(modifications), 100)
modifications = c("O","O 2"," O 3")
rep(length(modifications), 100)
rep(100, length(modifications))
source('~/GitHub/PRoteinMassSpecSim/Functions.R')
proteinChemForm <- formulaCharToNamedVec(proteinChemForm)
proteinChemForm
proteinChemForm <- namedVecToformularChar(proteinChemForm)
namedVecToformularChar <- function(nvec){
formChar <- paste("C",nvec[1],"H",nvec[2],"N",nvec[3],"O",nvec[4],"S",nvec[5],"P",nvec[6])
return(formChar)
}
proteinChemForm <- namedVecToformularChar(proteinChemForm)
modification = "C 0 H 0 N 0 O 0 S 0 P 0"
proteinChemForm <- pepToForm(proteinSequence)
proteinChemForm <- formulaCharToNamedVec(proteinChemForm)
proteinChemForm <- proteinChemForm + modification
proteinChemForm <- namedVecToformularChar(proteinChemForm)
proteinChemForm <- pepToForm(proteinSequence)
source('~/GitHub/PRoteinMassSpecSim/Functions.R')
source('~/GitHub/PRoteinMassSpecSim/Functions.R')
proteinChemForm <- pepToForm(proteinSequence)
proteinChemForm <- formulaCharToNamedVec(proteinChemForm)
proteinChemForm <- proteinChemForm + modification
proteinChemForm <- pepToForm(proteinSequence)
proteinChemForm <- formulaCharToNamedVec(proteinChemForm) + formulaCharToNamedVec(modification)
proteinChemForm <- namedVecToformularChar(proteinChemForm)
source('~/GitHub/PRoteinMassSpecSim/Functions.R')
myo_sim <- generateChargedDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE, modification = " C 0 H 0 N 0 O 2 S 0 P 0")
source('~/GitHub/PRoteinMassSpecSim/Functions.R')
myo_sim <- generateChargedDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE, modification = " C 0 H 0 N 0 O 2 S 0 P 0")
tmp <- formulaCharToNamedVec(proteinChemForm)
tmp <- tmp + c(0,x,0,0,0,0)
tmp <- formulaCharToNamedVec(proteinChemForm)
tmp <- tmp + c(0,3,0,0,0,0)
tmp <- formulaCharToNamedVec(proteinChemForm)
tmp <- tmp + c(0,3,0,0,0,0)
tmp <- formulaCharToNamedVec(proteinChemForm)
tmp <- tmp + c(0,3,0,0,0,0)
source('~/GitHub/PRoteinMassSpecSim/Functions.R')
myo_sim <- generateChargedDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE, modification = " C 0 H 0 N 0 O 2 S 0 P 0")
tmp <- UniProt.ws(taxId)
uniprotSpeciesName = "Homo sapiens"
proteinAccession = "P02144"
charge = 1:20
tmp <- availableUniprotSpecies()
if (any(tmp$`Species name` == uniprotSpeciesName)) taxId <- as.integer(tmp$`taxon ID`[tmp$`Species name` == uniprotSpeciesName])
tmp <- UniProt.ws(taxId)
proteinSequence <- select(tmp, proteinAccession, "SEQUENCE", "UNIPROTKB")[,2]
proteinChemForm <- pepToForm(proteinSequence)
proteinChemForm <- formulaCharToNamedVec(proteinChemForm) + formulaCharToNamedVec(modification)
modification = "C 0 H 0 N 0 O 0 S 0 P 0"
proteinChemForm <- formulaCharToNamedVec(proteinChemForm) + formulaCharToNamedVec(modification)
proteinChemForm <- namedVecToformularChar(proteinChemForm)
tmp <- formulaCharToNamedVec(proteinChemForm)
tmp <- tmp + c(0,x,0,0,0,0)
tmp <- list( C= tmp[1], H= tmp[2], N= tmp[3], O= tmp[4], S= tmp[5], P= tmp[6])
IsotopicDistribution( tmp, charge = 1 )
IsotopicDistribution( tmp, charge = 15 )
dframe <- ldply(charge, function(x){
tmp <- formulaCharToNamedVec(proteinChemForm)
tmp <- tmp + c(0,x,0,0,0,0)
tmp <- list( C= tmp[1], H= tmp[2], N= tmp[3], O= tmp[4], S= tmp[5], P= tmp[6])
tmp <- IsotopicDistribution( tmp, charge = x )
tmp$charge <- x
tmp$chemForm <- unname(unlist(tmp))
return(tmp)
})
unlist(tmp)
listToformularChar(tmp)
dframe <- ldply(charge, function(x){
tmp <- formulaCharToNamedVec(proteinChemForm)
tmp <- tmp + c(0,x,0,0,0,0)
tmp <- list( C= tmp[1], H= tmp[2], N= tmp[3], O= tmp[4], S= tmp[5], P= tmp[6])
dist <- IsotopicDistribution( tmp, charge = x )
dist$charge <- x
dist$chemForm <- listToformularChar(tmp)
return(dist)
})
source('~/GitHub/PRoteinMassSpecSim/Functions.R')
myo_sim <- generateChargedDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE, modification = " C 0 H 0 N 0 O 2 S 0 P 0")
IsotopicDistribution()
IsotopicDistribution
tmp <- formulaCharToNamedVec(proteinChemForm)
tmp <- tmp + c(0,x,0,0,0,0)
list( C= tmp[1], H= tmp[2], N= tmp[3], O= tmp[4], S= tmp[5], P= tmp[6])
tmp <- unname(tmp + c(0,x,0,0,0,0))
unname(tmp + c(0,1,0,0,0,0))
source('~/GitHub/PRoteinMassSpecSim/Functions.R')
myo_sim <- generateChargedDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE, modification = " C 0 H 0 N 0 O 2 S 0 P 0")
x=5
tmp <- formulaCharToNamedVec(proteinChemForm)
tmp <- unname(tmp + c(0,x,0,0,0,0))
tmp <- list( C= tmp[1], H= tmp[2], N= tmp[3], O= tmp[4], S= tmp[5], P= tmp[6])
dist <- IsotopicDistribution( tmp, charge = x )
dist$charge <- x
dist$chemForm <- listToformularChar(tmp)
IsotopicDistribution
tmp <- formulaCharToNamedVec(proteinChemForm)
tmp <- unname(tmp + c(0,x,0,0,0,0))
tmp <- formulaCharToNamedVec(proteinChemForm)
tmp <- unname(tmp + c(0,x,0,0,0,0))
tmp <- list( C= tmp[1], H= tmp[2], N= tmp[3], O= tmp[4], S= tmp[5], P= tmp[6])
tmp
list(C = 4)
list(C = 4, H = 5)
tmp <- list( C = tmp[1], H = tmp[2], N = tmp[3], O = tmp[4], S = tmp[5], P = tmp[6])
dist <- IsotopicDistribution( tmp, charge = x )
tmp <- formulaCharToNamedVec(proteinChemForm)
tmp <- unname(tmp + c(0,x,0,0,0,0))
tmp <- list( C = tmp[1], H = tmp[2], N = tmp[3], O = tmp[4], S = tmp[5], P = tmp[6])
dist <- IsotopicDistribution( tmp, charge = x )
source('~/GitHub/PRoteinMassSpecSim/Functions.R')
myo_sim <- generateChargedDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE, modification = " C 0 H 0 N 0 O 2 S 0 P 0")
myo_sim <- generateChargedDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE)#, modification = " C 0 H 0 N 0 O 2 S 0 P 0")
proteinChemForm <- pepToForm(proteinSequence)
myo_sim <- generateChargedDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE), "C 0 H 0 N 0 O 0 S 0 P 0")
myo_sim <- generateChargedDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE), modification = "C 0 H 0 N 0 O 0 S 0 P 0")
myo_sim <- generateChargedDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE, modification = "C 0 H 0 N 0 O 0 S 0 P 0")
myo_sim <- generateChargedDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE, modification = "C 0 H 0 N 0 O 2 S 0 P 0")
p <- p + geom_vline(data = myo_sim, aes(xintercept = mz, colour = "red"))
p <- ggplot()
p <- p + geom_line(data =  myo, aes(mz, intensity))
p + xlim(c(807.5,809))
myo <- read.csv2("Spectrum_Myoglobin.csv", sep = ",", dec = "." )
colnames(myo) <- c("mz", "intensity")
p <- ggplot()
p <- p + geom_line(data =  myo, aes(mz, intensity))
p + xlim(c(807.5,809))
p <- p + geom_line(data =  myo, aes(mz, intensity))
p + xlim(c(807.5,812))
myo_sim <- generateChargedDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE, modification = "C 0 H 0 N 0 O 2 S 0 P 0")
p <- p + geom_vline(data = myo_sim, aes(xintercept = mz, colour = "red"))
p
p + xlim(c(807.5,812))
p
fit <- myo[ round(myo$mz, digits = 2) %in% round(myo_sim$mz[ myo_sim$percent == 100 ], digits = 2),]
fit <- fit[ fit$intensity == max(fit$intensity),]
myo_sim$fittedIntensity <- NA
myo_sim$fittedIntensity <- fit$intensity * myo_sim$percent / 100
p <- p + geom_linerange(data = myo_sim, aes(mz, ymin = 0, ymax = fittedIntensity, colour = "red"))
p <- p + geom_line(data = myo_sim, aes(mz, fittedIntensity, colour = "red"))
p + xlim(c(807.5,809))
p + xlim(c(807.5,812))
p <- ggplot()
p <- p + geom_line(data =  myo, aes(mz, intensity))
p + xlim(c(807.5,812))
fit <- myo[ round(myo$mz, digits = 2) %in% round(myo_sim$mz[ myo_sim$percent == 100 ], digits = 2),]
fit <- fit[ fit$intensity == max(fit$intensity),]
myo_sim$fittedIntensity <- NA
myo_sim$fittedIntensity <- fit$intensity * myo_sim$percent / 100
p <- p + geom_linerange(data = myo_sim, aes(mz, ymin = 0, ymax = fittedIntensity, colour = "red"))
p <- p + geom_line(data = myo_sim, aes(mz, fittedIntensity, colour = "red"))
p + xlim(c(807.5,812))
myo_sim <- generateChargedDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE, modification = "C 0 H 0 N 0 O 2 S 0 P 1")
fit <- myo[ round(myo$mz, digits = 2) %in% round(myo_sim$mz[ myo_sim$percent == 100 ], digits = 2),]
fit <- fit[ fit$intensity == max(fit$intensity),]
myo_sim$fittedIntensity <- NA
myo_sim$fittedIntensity <- fit$intensity * myo_sim$percent / 100
p <- p + geom_linerange(data = myo_sim, aes(mz, ymin = 0, ymax = fittedIntensity, colour = "red"))
p <- p + geom_line(data = myo_sim, aes(mz, fittedIntensity, colour = "red"))
p + xlim(c(807.5,820))
p + xlim(c(807.5,814))
myo <- read.csv2("Spectrum_Myoglobin.csv", sep = ",", dec = "." )
colnames(myo) <- c("mz", "intensity")
p <- ggplot()
p <- p + geom_line(data =  myo, aes(mz, intensity))
p + xlim(c(807.5,820))
myo_sim <- generateChargedDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE, modification = "C 0 H 0 N 0 O 0 S 0 P 0")
fit <- myo[ round(myo$mz, digits = 2) %in% round(myo_sim$mz[ myo_sim$percent == 100 ], digits = 2),]
fit <- fit[ fit$intensity == max(fit$intensity),]
myo_sim$fittedIntensity <- NA
myo_sim$fittedIntensity <- fit$intensity * myo_sim$percent / 100
p <- p + geom_linerange(data = myo_sim, aes(mz, ymin = 0, ymax = fittedIntensity, colour = "red"))
p <- p + geom_line(data = myo_sim, aes(mz, fittedIntensity, colour = "red"))
myo_sim <- generateChargedDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE, modification = "C 0 H 0 N 0 O 1 S 0 P 0")
fit <- myo[ round(myo$mz, digits = 2) %in% round(myo_sim$mz[ myo_sim$percent == 100 ], digits = 2),]
fit <- fit[ fit$intensity == max(fit$intensity),]
myo_sim$fittedIntensity <- NA
myo_sim$fittedIntensity <- fit$intensity * myo_sim$percent / 100
p <- p + geom_linerange(data = myo_sim, aes(mz, ymin = 0, ymax = fittedIntensity, colour = "red"))
p <- p + geom_line(data = myo_sim, aes(mz, fittedIntensity, colour = "red"))
myo_sim <- generateChargedDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE, modification = "C 0 H 0 N 0 2 0 S 0 P 1")
fit <- myo[ round(myo$mz, digits = 2) %in% round(myo_sim$mz[ myo_sim$percent == 100 ], digits = 2),]
fit <- fit[ fit$intensity == max(fit$intensity),]
myo_sim$fittedIntensity <- NA
myo_sim$fittedIntensity <- fit$intensity * myo_sim$percent / 100
p <- p + geom_linerange(data = myo_sim, aes(mz, ymin = 0, ymax = fittedIntensity, colour = "red"))
p <- p + geom_line(data = myo_sim, aes(mz, fittedIntensity, colour = "red"))
p + xlim(c(807.5,814))
p <- ggplot()
p <- p + geom_line(data =  myo, aes(mz, intensity))
p + xlim(c(807.5,812))
myo_sim <- generateChargedDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE, modification = "C 0 H 0 N 0 O 0 S 0 P 0")
fit <- myo[ round(myo$mz, digits = 2) %in% round(myo_sim$mz[ myo_sim$percent == 100 ], digits = 2),]
fit <- fit[ fit$intensity == max(fit$intensity),]
myo_sim$fittedIntensity <- NA
myo_sim$fittedIntensity <- fit$intensity * myo_sim$percent / 100
p <- p + geom_linerange(data = myo_sim, aes(mz, ymin = 0, ymax = fittedIntensity, colour = "red"))
p <- p + geom_line(data = myo_sim, aes(mz, fittedIntensity, colour = "red"))
myo_sim <- generateChargedDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE, modification = "C 0 H 0 N 0 O 1 S 0 P 0")
fit <- myo[ round(myo$mz, digits = 2) %in% round(myo_sim$mz[ myo_sim$percent == 100 ], digits = 2),]
fit <- fit[ fit$intensity == max(fit$intensity),]
myo_sim$fittedIntensity <- NA
myo_sim$fittedIntensity <- fit$intensity * myo_sim$percent / 100
p <- p + geom_linerange(data = myo_sim, aes(mz, ymin = 0, ymax = fittedIntensity, colour = "red"))
p <- p + geom_line(data = myo_sim, aes(mz, fittedIntensity, colour = "red"))
myo_sim <- generateChargedDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE, modification = "C 0 H 0 N 0 2 0 S 0 P 1")
fit <- myo[ round(myo$mz, digits = 2) %in% round(myo_sim$mz[ myo_sim$percent == 100 ], digits = 2),]
fit <- fit[ fit$intensity == max(fit$intensity),]
myo_sim$fittedIntensity <- NA
myo_sim$fittedIntensity <- fit$intensity * myo_sim$percent / 100
p <- p + geom_linerange(data = myo_sim, aes(mz, ymin = 0, ymax = fittedIntensity, colour = "red"))
p <- p + geom_line(data = myo_sim, aes(mz, fittedIntensity, colour = "red"))
p + xlim(c(807.5,812))
myo <- read.csv2("Spectrum_Myoglobin.csv", sep = ",", dec = "." )
colnames(myo) <- c("mz", "intensity")
p <- ggplot()
p <- p + geom_line(data =  myo, aes(mz, intensity))
p + xlim(c(807.5,812))
myo_sim <- generateChargedDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE, modification = "C 0 H 0 N 0 O 0 S 0 P 0")
fit <- myo[ round(myo$mz, digits = 2) %in% round(myo_sim$mz[ myo_sim$percent == 100 ], digits = 2),]
fit <- fit[ fit$intensity == max(fit$intensity),]
myo_sim$fittedIntensity <- NA
myo_sim$fittedIntensity <- fit$intensity * myo_sim$percent / 100
p <- p + geom_linerange(data = myo_sim, aes(mz, ymin = 0, ymax = fittedIntensity, colour = "red"))
p <- p + geom_line(data = myo_sim, aes(mz, fittedIntensity, colour = "red"))
p + xlim(c(807.5,812))
myo_sim <- generateChargedDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE, modification = "C 0 H 0 N 0 O 1 S 0 P 0")
fit <- myo[ round(myo$mz, digits = 2) %in% round(myo_sim$mz[ myo_sim$percent == 100 ], digits = 2),]
fit <- fit[ fit$intensity == max(fit$intensity),]
myo_sim$fittedIntensity <- NA
myo_sim$fittedIntensity <- fit$intensity * myo_sim$percent / 100
p <- p + geom_linerange(data = myo_sim, aes(mz, ymin = 0, ymax = fittedIntensity, colour = "red"))
p <- p + geom_line(data = myo_sim, aes(mz, fittedIntensity, colour = "red"))
p + xlim(c(807.5,812))
myo_sim <- generateChargedDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE, modification = "C 0 H 0 N 0 2 0 S 0 P 1")
fit <- myo[ round(myo$mz, digits = 2) %in% round(myo_sim$mz[ myo_sim$percent == 100 ], digits = 2),]
fit <- fit[ fit$intensity == max(fit$intensity),]
myo_sim$fittedIntensity <- NA
myo_sim$fittedIntensity <- fit$intensity * myo_sim$percent / 100
p <- p + geom_linerange(data = myo_sim, aes(mz, ymin = 0, ymax = fittedIntensity, colour = "red"))
p <- p + geom_line(data = myo_sim, aes(mz, fittedIntensity, colour = "red"))
p + xlim(c(807.5,812))
p <- ggplot()
p <- p + geom_line(data =  myo, aes(mz, intensity))
p + xlim(c(807.5,812))
myo_sim <- generateChargedDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE, modification = "C 0 H 0 N 0 O 0 S 0 P 0")
fit <- myo[ round(myo$mz, digits = 2) %in% round(myo_sim$mz[ myo_sim$percent == 100 ], digits = 2),]
fit <- fit[ fit$intensity == max(fit$intensity),]
myo_sim$fittedIntensity <- NA
myo_sim$fittedIntensity <- fit$intensity * myo_sim$percent / 100
p <- p + geom_linerange(data = myo_sim, aes(mz, ymin = 0, ymax = fittedIntensity, colour = "red"))
p <- p + geom_line(data = myo_sim, aes(mz, fittedIntensity, colour = "red"))
p + xlim(c(807.5,812))
myo_sim <- generateChargedDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE, modification = "C 0 H 0 N 0 O 1 S 0 P 0")
fit <- myo[ round(myo$mz, digits = 2) %in% round(myo_sim$mz[ myo_sim$percent == 100 ], digits = 2),]
fit <- fit[ fit$intensity == max(fit$intensity),]
myo_sim$fittedIntensity <- NA
myo_sim$fittedIntensity <- fit$intensity * myo_sim$percent / 100
p <- p + geom_linerange(data = myo_sim, aes(mz, ymin = 0, ymax = fittedIntensity, colour = "red"))
p <- p + geom_line(data = myo_sim, aes(mz, fittedIntensity, colour = "red"))
p + xlim(c(807.5,812))
myo_sim <- generateChargedDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE, modification = "C 0 H 0 N 0 O 2 S 0 P 0")
fit <- myo[ round(myo$mz, digits = 2) %in% round(myo_sim$mz[ myo_sim$percent == 100 ], digits = 2),]
fit <- fit[ fit$intensity == max(fit$intensity),]
myo_sim$fittedIntensity <- NA
myo_sim$fittedIntensity <- fit$intensity * myo_sim$percent / 100
p <- p + geom_linerange(data = myo_sim, aes(mz, ymin = 0, ymax = fittedIntensity, colour = "red"))
p <- p + geom_line(data = myo_sim, aes(mz, fittedIntensity, colour = "red"))
p + xlim(c(807.5,812))
myo_sim <- generateChargedDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE, modification = "C 0 H 0 N 0 2 0 S 0 P 1")
fit <- myo[ round(myo$mz, digits = 2) %in% round(myo_sim$mz[ myo_sim$percent == 100 ], digits = 2),]
fit <- fit[ fit$intensity == max(fit$intensity),]
myo_sim$fittedIntensity <- NA
myo_sim$fittedIntensity <- fit$intensity * myo_sim$percent / 100
p <- p + geom_linerange(data = myo_sim, aes(mz, ymin = 0, ymax = fittedIntensity, colour = "red"))
p <- p + geom_line(data = myo_sim, aes(mz, fittedIntensity, colour = "red"))
p + xlim(c(807.5,812))
modification = "C 0 H 0 N 0 O 0 S 0 P 1"
proteinChemForm <- pepToForm(proteinSequence)
proteinChemForm <- formulaCharToNamedVec(proteinChemForm) + formulaCharToNamedVec(modification)
proteinChemForm <- namedVecToformularChar(proteinChemForm)
tmp <- formulaCharToNamedVec(proteinChemForm)
tmp <- unname(tmp + c(0,x,0,0,0,0))
tmp <- list( C = tmp[1], H = tmp[2], N = tmp[3], O = tmp[4], S = tmp[5], P = tmp[6])
dist <- IsotopicDistribution( tmp, charge = x )
dist$charge <- x
dist$chemForm <- listToformularChar(tmp)
View(dist)
myo <- read.csv2("Spectrum_Myoglobin.csv", sep = ",", dec = "." )
colnames(myo) <- c("mz", "intensity")
p <- ggplot()
p <- p + geom_line(data =  myo, aes(mz, intensity))
p + xlim(c(807.5,812))
myo_sim <- generateChargedDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE, modification = "C 0 H 0 N 0 O 0 S 0 P 0")
fit <- myo[ round(myo$mz, digits = 2) %in% round(myo_sim$mz[ myo_sim$percent == 100 ], digits = 2),]
fit <- fit[ fit$intensity == max(fit$intensity),]
myo_sim$fittedIntensity <- NA
myo_sim$fittedIntensity <- fit$intensity * myo_sim$percent / 100
p <- p + geom_linerange(data = myo_sim, aes(mz, ymin = 0, ymax = fittedIntensity, colour = "red"))
p <- p + geom_line(data = myo_sim, aes(mz, fittedIntensity, colour = "red"))
p + xlim(c(807.5,812))
myo_sim <- generateChargedDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE, modification = "C 0 H 0 N 0 O 1 S 0 P 0")
fit <- myo[ round(myo$mz, digits = 2) %in% round(myo_sim$mz[ myo_sim$percent == 100 ], digits = 2),]
fit <- fit[ fit$intensity == max(fit$intensity),]
myo_sim$fittedIntensity <- NA
myo_sim$fittedIntensity <- fit$intensity * myo_sim$percent / 100
p <- p + geom_linerange(data = myo_sim, aes(mz, ymin = 0, ymax = fittedIntensity, colour = "red"))
p <- p + geom_line(data = myo_sim, aes(mz, fittedIntensity, colour = "red"))
p + xlim(c(807.5,812))
myo_sim <- generateChargedDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE, modification = "C 0 H 0 N 0 O 2 S 0 P 0")
fit <- myo[ round(myo$mz, digits = 2) %in% round(myo_sim$mz[ myo_sim$percent == 100 ], digits = 2),]
fit <- fit[ fit$intensity == max(fit$intensity),]
myo_sim$fittedIntensity <- NA
myo_sim$fittedIntensity <- fit$intensity * myo_sim$percent / 100
p <- p + geom_linerange(data = myo_sim, aes(mz, ymin = 0, ymax = fittedIntensity, colour = "red"))
p <- p + geom_line(data = myo_sim, aes(mz, fittedIntensity, colour = "red"))
p + xlim(c(807.5,812))
myo_sim <- generateChargedDist(uniprotSpeciesName = "Equus caballus", proteinAccession = "P68082", charge = 25:10, removeFirstM = TRUE, modification = "C 0 H 0 N 0 O 2 S 0 P 1")
fit <- myo[ round(myo$mz, digits = 2) %in% round(myo_sim$mz[ myo_sim$percent == 100 ], digits = 2),]
fit <- fit[ fit$intensity == max(fit$intensity),]
myo_sim$fittedIntensity <- NA
myo_sim$fittedIntensity <- fit$intensity * myo_sim$percent / 100
p <- p + geom_linerange(data = myo_sim, aes(mz, ymin = 0, ymax = fittedIntensity, colour = "red"))
p <- p + geom_line(data = myo_sim, aes(mz, fittedIntensity, colour = "red"))
p + xlim(c(807.5,812))
p <- p + xlim(c(807.5,812))
ggsave(filename = "DemoPlot.png", plot = p)
source('~/GitHub/PRoteinMassSpecSim/Functions.R')
